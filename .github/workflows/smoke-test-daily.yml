name: Smoke test daily
on:
    # mytodo remove pull_request, uncomment cron
    # schedule:
    #     - cron: '25 3 * * *'
    workflow_dispatch:
    pull_request:

env:
    API_ARTIFACT: api-daily--run-${{ github.run_number }}
    E2E_ARTIFACT: e2e-daily--run-${{ github.run_number }}
    BRANCH_NAME: e2e/rep-s3-daily # mytodo revert to trunk

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    e2e-test:
        name: E2E test on trunk
        runs-on: ubuntu-20.04
        # mytodo skip for now
        if: false
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ env.BRANCH_NAME }}

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false
                  php-version: null

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Run E2E smoke test.
              timeout-minutes: 60
              working-directory: plugins/woocommerce
              id: run_playwright_e2e_tests
              env:
                  BASE_URL: ${{ secrets.SMOKE_TEST_URL }}
                  ADMIN_USER: ${{ secrets.SMOKE_TEST_ADMIN_USER }}
                  ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_ADMIN_PASSWORD }}
                  ADMIN_USER_EMAIL: ${{ secrets.SMOKE_TEST_ADMIN_USER_EMAIL }}
                  CUSTOMER_USER: ${{ secrets.SMOKE_TEST_CUSTOMER_USER }}
                  CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_CUSTOMER_PASSWORD }}
                  UPDATE_WC: true
                  DEFAULT_TIMEOUT_OVERRIDE: 120000
                  E2E_MAX_FAILURES: 20
              run: |
                  pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js update-woocommerce.spec.js
                  unset UPDATE_WC
                  pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js basic.spec.js

            - name: Generate Playwright E2E Test report.
              id: generate_e2e_report
              if: |
                  always() &&
                  (
                    steps.run_playwright_e2e_tests.conclusion != 'cancelled' ||
                    steps.run_playwright_e2e_tests.conclusion != 'skipped' 
                  )
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean e2e/allure-results --output e2e/allure-report

            - name: Archive E2E test report
              if: |
                  always() &&
                  steps.generate_e2e_report.conclusion == 'success'
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_ARTIFACT }}
                  path: |
                      plugins/woocommerce/e2e/allure-results
                      plugins/woocommerce/e2e/allure-report
                  if-no-files-found: ignore
                  retention-days: 5

    api-test:
        name: API test on trunk
        runs-on: ubuntu-20.04
        needs: [e2e-test]
        # mytodo skip for the meantime
        # if: always()
        if: false
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ env.BRANCH_NAME }}

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false
                  php-version: null

            - name: Run API tests.
              if: always()
              id: run_playwright_api_tests
              working-directory: plugins/woocommerce
              env:
                  BASE_URL: ${{ secrets.SMOKE_TEST_URL }}
                  USER_KEY: ${{ secrets.SMOKE_TEST_ADMIN_USER }}
                  USER_SECRET: ${{ secrets.SMOKE_TEST_ADMIN_PASSWORD }}
                  DEFAULT_TIMEOUT_OVERRIDE: 120000
              run: pnpm exec playwright test --config=tests/api-core-tests/playwright.config.js

            - name: Generate API Test report.
              id: generate_api_report
              if: |
                  always() &&
                  (
                    steps.run_playwright_api_tests.conclusion != 'cancelled' ||
                    steps.run_playwright_api_tests.conclusion != 'skipped' 
                  )
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean api-test-report/allure-results --output api-test-report/allure-report

            - name: Archive API test report
              if: |
                  always() &&
                  steps.generate_api_report.conclusion == 'success'
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.API_ARTIFACT }}
                  path: |
                      plugins/woocommerce/api-test-report/allure-results
                      plugins/woocommerce/api-test-report/allure-report
                  if-no-files-found: ignore
                  retention-days: 5

    k6-test:
        name: k6 test on trunk
        runs-on: ubuntu-20.04
        needs: [api-test]
        # mytodo skip for the meantime
        # if: always()
        if: false
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ env.BRANCH_NAME }}

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false
                  php-version: null

            - name: Update performance test site with E2E test
              if: always()
              working-directory: plugins/woocommerce
              env:
                  SMOKE_TEST_URL: ${{ secrets.SMOKE_TEST_PERF_URL }}/
                  SMOKE_TEST_ADMIN_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  SMOKE_TEST_ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  SMOKE_TEST_ADMIN_USER_EMAIL: ${{ secrets.SMOKE_TEST_ADMIN_USER_EMAIL }}
                  SMOKE_TEST_CUSTOMER_USER: ${{ secrets.SMOKE_TEST_CUSTOMER_USER }}
                  SMOKE_TEST_CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_CUSTOMER_PASSWORD }}
                  WC_E2E_SCREENSHOTS: 1
                  E2E_RETEST: 1
                  E2E_RETRY_TIMES: 0
                  E2E_SLACK_TOKEN: ${{ secrets.SMOKE_TEST_SLACK_TOKEN }}
                  E2E_SLACK_CHANNEL: ${{ secrets.SMOKE_TEST_SLACK_CHANNEL }}
                  UPDATE_WC: 1
                  DEFAULT_TIMEOUT_OVERRIDE: 120000
              run: |
                  pnpm exec wc-e2e test:e2e tests/e2e/specs/smoke-tests/update-woocommerce.js
              continue-on-error: true

            - name: Install k6
              if: always()
              run: |
                  curl https://github.com/grafana/k6/releases/download/v0.33.0/k6-v0.33.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1

            - name: Run k6 smoke tests
              if: always()
              env:
                  URL: ${{ secrets.SMOKE_TEST_PERF_URL }}
                  HOST: ${{ secrets.SMOKE_TEST_PERF_HOST }}
                  A_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  A_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  C_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  C_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  P_ID: 274
              run: |
                  ./k6 run plugins/woocommerce/tests/performance/tests/gh-action-daily-ext-requests.js

    # Disable for this job for the meantime. It will be migrated to Playwright later.
    test-plugins:
        name: Smoke tests with ${{ matrix.plugin }} plugin installed
        if: always()
        runs-on: ubuntu-20.04
        needs: [k6-test]
        strategy:
            fail-fast: false
            matrix:
                include:
                    - plugin: 'WooCommerce Payments'
                      repo: 'automattic/woocommerce-payments'
                    - plugin: 'WooCommerce PayPal Payments'
                      repo: 'woocommerce/woocommerce-paypal-payments'
                    - plugin: 'WooCommerce Shipping & Tax'
                      repo: 'automattic/woocommerce-services'
                    - plugin: 'WooCommerce Subscriptions'
                      repo: WC_SUBSCRIPTIONS_REPO
                      private: true
                    - plugin: 'WordPress SEO' # Yoast SEO in the UI, but the slug is wordpress-seo
                      repo: 'Yoast/wordpress-seo'
                    - plugin: 'Contact Form 7'
                      repo: 'takayukister/contact-form-7'
        steps:
            - name: Create dirs.
              run: |
                  mkdir -p package/woocommerce
                  mkdir -p tmp/woocommerce

            - uses: actions/checkout@v3
              with:
                  path: package/woocommerce
                  ref: ${{ env.BRANCH_NAME }}

            - name: Setup WooCommerce Monorepo
              uses: package/woocommerce/.github/actions/setup-woocommerce-monorepo
              with:
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Launch wp-env e2e environment
              working-directory: package/woocommerce/plugins/woocommerce
              run: pnpm env:test --filter=woocommerce

            - name: Run E2E tests
              id: run_playwright_e2e_tests
              working-directory: package/woocommerce/plugins/woocommerce
              env:
                  USE_WP_ENV: 1
                  E2E_MAX_FAILURES: 15
                  FORCE_COLOR: 1
                  PLUGIN_REPOSITORY: ${{ matrix.private && secrets[matrix.repo] || matrix.repo }}
                  PLUGIN_NAME: ${{ matrix.plugin }}
                  GITHUB_TOKEN: ${{ secrets.E2E_GH_TOKEN }}
              run: |
                  pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js update-plugin.spec.js
                  pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js basic.spec.js

            - name: Generate Playwright E2E Test report.
              id: generate_e2e_report
              if: |
                  always() &&
                  (
                    steps.run_playwright_e2e_tests.conclusion != 'cancelled' ||
                    steps.run_playwright_e2e_tests.conclusion != 'skipped' 
                  )
              working-directory: package/woocommerce/plugins/woocommerce
              run: pnpm exec allure generate --clean e2e/allure-results --output e2e/allure-report

            - name: Archive Playwright E2E test report
              if: |
                  always() &&
                  steps.generate_e2e_report.conclusion == 'success'
              uses: actions/upload-artifact@v3
              with:
                  name: e2e-daily-${{ matrix.plugin }}--run-${{ github.run_number }}
                  path: |
                      package/woocommerce/plugins/woocommerce/e2e/allure-results
                      package/woocommerce/plugins/woocommerce/e2e/allure-report
                  if-no-files-found: ignore
                  retention-days: 5

    publish-reports:
        name: Publish test reports
        # mytodo skip for the meantime
        # if: |
        #     always() &&
        #     ! github.event.pull_request.head.repo.fork &&
        #     (
        #       contains( needs.*.result, 'success' ) ||
        #       contains( needs.*.result, 'failure' )
        #     )
        if: false
        runs-on: ubuntu-20.04
        needs: [test-plugins]
        env:
            GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
            RUN_ID: ${{ github.run_id }}
        steps:
            - name: Publish API & E2E test reports
              run: |
                  gh workflow run publish-test-reports-daily.yml \
                    -f run_id=$RUN_ID \
                    -f api_artifact=$API_ARTIFACT \
                    -f e2e_artifact=$E2E_ARTIFACT \
                    -f s3_root=public \
                    --repo woocommerce/woocommerce-test-reports

    post-summary:
        name: Post test results
        # mytodo skip for the meantime
        # if: |
        #     always() &&
        #     ! github.event.pull_request.head.repo.fork &&
        #     (
        #       contains( needs.*.result, 'success' ) ||
        #       contains( needs.*.result, 'failure' )
        #     )
        if: false
        runs-on: ubuntu-20.04
        needs: [e2e-test, api-test]
        steps:
            - name: Create dirs
              run: |
                  mkdir -p repo
                  mkdir -p artifacts/api 
                  mkdir -p artifacts/e2e
                  mkdir -p output

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  path: repo
                  ref: ${{ env.BRANCH_NAME }}

            - name: Download API test report artifact
              uses: actions/download-artifact@v3
              with:
                  name: ${{ env.API_ARTIFACT }}
                  path: artifacts/api

            - name: Download E2E test report artifact
              uses: actions/download-artifact@v3
              with:
                  name: ${{ env.E2E_ARTIFACT }}
                  path: artifacts/e2e

            - name: Post test summary
              uses: actions/github-script@v6
              env:
                  API_SUMMARY_PATH: ${{ github.workspace }}/artifacts/api/allure-report/widgets/summary.json
                  E2E_PW_SUMMARY_PATH: ${{ github.workspace }}/artifacts/e2e/allure-report/widgets/summary.json
              with:
                  result-encoding: string
                  script: |
                      const script = require( './repo/.github/workflows/scripts/prepare-test-summary-daily.js' )
                      return await script( { core } )
