name: Smoke test release
on:
    release:
        types: [published]
    workflow_dispatch:
        inputs:
            tag:
                description: 'WooCommerce Release Tag'
                required: true
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
permissions: {}
env:
    API_WP_LATEST_ARTIFACT: api-wp-latest--run-${{ github.run_number }}
    E2E_WP_LATEST_ARTIFACT: e2e-wp-latest--run-${{ github.run_number }}
    E2E_UPDATE_WC_ARTIFACT: e2e-update-wc--run-${{ github.run_number }}
    K6_ARTIFACT: k6-release--run-${{ github.run_number }}
    FORCE_COLOR: 1

jobs:
    get-tag:
        name: Get WooCommerce release tag
        runs-on: ubuntu-20.04
        outputs:
            tag: ${{ steps.tag.outputs.result }}
        steps:
            - name: Validate tag
              if: ${{ github.event_name == 'workflow_dispatch' }}
              env:
                  GH_TOKEN: ${{ github.token }}
              run: gh release view "${{ github.event.inputs.tag }}" --repo=woocommerce/woocommerce

            - name: Get tag
              uses: actions/github-script@v5
              id: tag
              with:
                  result-encoding: string
                  script: |
                      console.log( "${{ github.event_name }}" );
                      return "${{ github.event.release.tag_name }}" || "${{ github.event.inputs.tag }}"

    e2e-update-wc:
        name: Test WooCommerce update
        runs-on: ubuntu-20.04
        needs: [get-tag]
        permissions:
            contents: read
        env:
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Run 'Update WooCommerce' test.
              working-directory: plugins/woocommerce
              env:
                  ADMIN_PASSWORD: ${{ secrets.RELEASE_TEST_ADMIN_PASSWORD }}
                  ADMIN_USER: ${{ secrets.RELEASE_TEST_ADMIN_USER }}
                  BASE_URL: ${{ secrets.RELEASE_TEST_URL }}
                  CUSTOMER_PASSWORD: ${{ secrets.RELEASE_TEST_CUSTOMER_PASSWORD }}
                  CUSTOMER_USER: ${{ secrets.RELEASE_TEST_CUSTOMER_USER }}
                  DEFAULT_TIMEOUT_OVERRIDE: 120000
                  RESET_SITE: true
                  UPDATE_WC: ${{ needs.get-tag.outputs.tag }}
              run: |
                  pnpm exec playwright test \
                      --config=tests/e2e-pw/daily.playwright.config.js \
                      update-woocommerce.spec.js

            - name: Generate 'Update WooCommerce' test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive 'Update WooCommerce' test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_UPDATE_WC_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    api-wp-latest:
        name: API on WP Latest
        runs-on: ubuntu-20.04
        needs: [e2e-update-wc]
        permissions:
            contents: read
        env:
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/api-test-report/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/api-test-report/allure-results
            BASE_URL: ${{ secrets.RELEASE_TEST_URL }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Run API tests.
              working-directory: plugins/woocommerce
              env:
                  USER_KEY: ${{ secrets.RELEASE_TEST_ADMIN_USER }}
                  USER_SECRET: ${{ secrets.RELEASE_TEST_ADMIN_PASSWORD }}
              run: pnpm exec playwright test --config=tests/api-core-tests/playwright.config.js hello

            - name: Generate API Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive API test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.API_WP_LATEST_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: ${{ secrets.REPORTS_AWS_REGION }}
                  aws-access-key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}

            - name: Upload artifact to bucket
              run: |
                  aws s3 cp ${{ env.ALLURE_RESULTS_DIR }} \
                      ${{ secrets.REPORTS_BUCKET }}/artifacts/${{ github.run_id }}/${{ env.API_WP_LATEST_ARTIFACT }}/allure-results \
                      --recursive \
                      --quiet
                  aws s3 cp ${{ env.ALLURE_REPORT_DIR }} \
                      ${{ secrets.REPORTS_BUCKET }}/artifacts/${{ github.run_id }}/${{ env.API_WP_LATEST_ARTIFACT }}/allure-report \
                      --recursive \
                      --quiet

    e2e-wp-latest:
        name: E2E on WP Latest
        runs-on: ubuntu-20.04
        needs: [api-wp-latest]
        permissions:
            contents: read
        env:
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Run E2E tests
              env:
                  ADMIN_PASSWORD: ${{ secrets.RELEASE_TEST_ADMIN_PASSWORD }}
                  ADMIN_USER: ${{ secrets.RELEASE_TEST_ADMIN_USER }}
                  ADMIN_USER_EMAIL: ${{ secrets.RELEASE_TEST_ADMIN_USER_EMAIL }}
                  BASE_URL: ${{ secrets.RELEASE_TEST_URL }}
                  CUSTOMER_PASSWORD: ${{ secrets.RELEASE_TEST_CUSTOMER_PASSWORD }}
                  CUSTOMER_USER: ${{ secrets.RELEASE_TEST_CUSTOMER_USER }}
                  DEFAULT_TIMEOUT_OVERRIDE: 120000
                  E2E_MAX_FAILURES: 25
                  RESET_SITE: true
              timeout-minutes: 60
              working-directory: plugins/woocommerce
              run: pnpm exec playwright test --config=tests/e2e-pw/ignore-plugin-tests.playwright.config.js basic.spec.js

            - name: Download 'e2e-update-wc' artifact
              uses: actions/download-artifact@v3
              with:
                  name: ${{ env.E2E_UPDATE_WC_ARTIFACT }}
                  path: plugins/woocommerce/tmp

            - name: Add allure-results from 'e2e-update-wc'
              working-directory: plugins/woocommerce
              run: cp -r tmp/allure-results tests/e2e-pw/test-results

            - name: Generate E2E Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive E2E test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_WP_LATEST_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: ${{ secrets.REPORTS_AWS_REGION }}
                  aws-access-key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}

            - name: Upload artifact to bucket
              run: |
                  aws s3 cp ${{ env.ALLURE_RESULTS_DIR }} \
                      ${{ secrets.REPORTS_BUCKET }}/artifacts/${{ github.run_id }}/${{ env.E2E_WP_LATEST_ARTIFACT }}/allure-results \
                      --recursive \
                      --quiet
                  aws s3 cp ${{ env.ALLURE_REPORT_DIR }} \
                      ${{ secrets.REPORTS_BUCKET }}/artifacts/${{ github.run_id }}/${{ env.E2E_WP_LATEST_ARTIFACT }}/allure-report \
                      --recursive \
                      --quiet

    k6-on-release:
        name: k6 tests on release
        runs-on: ubuntu-20.04
        needs: [e2e-wp-latest]
        if: false
        # if: success() || failure()
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ env.BRANCH_NAME }}

            - name: Download WooCommerce release zip
              run: |
                  curl https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ steps.fetch_asset_id.outputs.asset_id }} -LJOH 'Accept: application/octet-stream'
                  unzip woocommerce.zip -d woocommerce
                  rsync -a woocommerce/woocommerce/* plugins/woocommerce/

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Install k6
              if: success() || failure()
              run: |
                  curl https://github.com/grafana/k6/releases/download/v0.33.0/k6-v0.33.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1

            - name: Run k6 smoke tests
              if: success() || failure()
              env:
                  URL: ${{ secrets.SMOKE_TEST_PERF_URL }}
                  HOST: ${{ secrets.SMOKE_TEST_PERF_HOST }}
                  A_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  A_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  C_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  C_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  P_ID: 274
              run: |
                  ./k6 run plugins/woocommerce/tests/performance/tests/gh-action-daily-ext-requests.js

            - name: Generate k6 Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive k6 test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.K6_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    PHP-versions:
        name: PHP version ${{ matrix.php }} on release
        runs-on: ubuntu-20.04
        needs: [e2e-wp-latest]
        if: false
        # if: success()
        strategy:
            matrix:
                php: ['7.4', '8.0', '8.1']
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-report
            DEFAULT_TIMEOUT_OVERRIDE: 120000

        steps:
            - uses: actions/checkout@v3
              with:
                  ref: trunk

            - name: Download WooCommerce release zip
              run: |
                  curl https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ steps.fetch_asset_id.outputs.asset_id }} -LJOH 'Accept: application/octet-stream'
                  unzip woocommerce.zip -d woocommerce
                  rsync -a woocommerce/woocommerce/* plugins/woocommerce/

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Launch wp-env e2e environment
              working-directory: plugins/woocommerce
              env:
                  WP_ENV_PHP_VERSION: ${{ matrix.php}}
              run: pnpm env:test

            - name: Run the E2E tests.
              timeout-minutes: 60
              working-directory: plugins/woocommerce
              env:
                  E2E_MAX_FAILURES: 50
              run: pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js

            - name: Generate Playwright E2E Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive E2E test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_WP_LATEST_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    WP-versions:
        name: WP version ${{ matrix.wp }} on release
        runs-on: ubuntu-20.04
        needs: [e2e-wp-latest]
        if: false
        # if: success()
        strategy:
            matrix:
                wp: ['6.1', '6.0.3']
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-report
            DEFAULT_TIMEOUT_OVERRIDE: 120000

        steps:
            - uses: actions/checkout@v3
              with:
                  ref: trunk

            - name: Download WooCommerce release zip
              run: |
                  curl https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ steps.fetch_asset_id.outputs.asset_id }} -LJOH 'Accept: application/octet-stream'
                  unzip woocommerce.zip -d woocommerce
                  rsync -a woocommerce/woocommerce/* plugins/woocommerce/

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Launch wp-env e2e environment
              working-directory: plugins/woocommerce
              env:
                  WP_ENV_CORE: WordPress/WordPress#tags/${{ matrix.wp}}
              run: pnpm env:test

            - name: Run the E2E tests.
              timeout-minutes: 60
              working-directory: plugins/woocommerce
              env:
                  E2E_MAX_FAILURES: 50
              run: pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js

            - name: Generate Playwright E2E Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive E2E test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_WP_LATEST_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    Common-plugins:
        name: Release test with ${{ matrix.plugin }} plugin installed
        runs-on: ubuntu-20.04
        needs: [e2e-wp-latest]
        if: false
        # if: success() || failure()
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-report
        strategy:
            fail-fast: false
            matrix:
                include:
                    - plugin: 'WooCommerce Payments'
                      repo: 'automattic/woocommerce-payments'
                    - plugin: 'WooCommerce PayPal Payments'
                      repo: 'woocommerce/woocommerce-paypal-payments'
                    - plugin: 'WooCommerce Shipping & Tax'
                      repo: 'automattic/woocommerce-services'
                    - plugin: 'WooCommerce Subscriptions'
                      repo: WC_SUBSCRIPTIONS_REPO
                      private: true
                    - plugin: 'WordPress SEO' # Yoast SEO in the UI, but the slug is wordpress-seo
                      repo: 'Yoast/wordpress-seo'
                    - plugin: 'Contact Form 7'
                      repo: 'takayukister/contact-form-7'
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: trunk

            - name: Download WooCommerce release zip
              run: |
                  curl https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ steps.fetch_asset_id.outputs.asset_id }} -LJOH 'Accept: application/octet-stream'
                  unzip woocommerce.zip -d woocommerce
                  rsync -a woocommerce/woocommerce/* plugins/woocommerce/

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Run 'Upload plugin' test
              id: e2e-upload
              working-directory: plugins/woocommerce
              env:
                  PLUGIN_REPOSITORY: ${{ matrix.private && secrets[matrix.repo] || matrix.repo }}
                  PLUGIN_NAME: ${{ matrix.plugin }}
                  GITHUB_TOKEN: ${{ secrets.E2E_GH_TOKEN }}
              run: pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js upload-plugin.spec.js

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium

            - name: Launch wp-env e2e environment
              working-directory: plugins/woocommerce
              run: pnpm env:test

            - name: Run the rest of E2E tests
              id: e2e
              working-directory: plugins/woocommerce
              env:
                  E2E_MAX_FAILURES: 50
              run: pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js

            - name: Generate E2E Test report.
              id: report
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive E2E test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: Smoke tests with ${{ matrix.plugin }} plugin installed (run ${{ github.run_number }})
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    publish-reports:
        name: Publish Allure reports
        if: |
            ( success() || failure() ) &&
            ! github.event.pull_request.head.repo.fork
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        needs: [get-tag, e2e-wp-latest]
        steps:
            - name: Publish report on WP Latest
              env:
                  GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
              run: |
                  gh workflow run publish-test-reports-release.yml \
                    -f run_id=${{ github.run_id }} \
                    -f run_number=${{ github.run_number }} \
                    -f release_tag=${{ needs.get-tag.outputs.tag }} \
                    -f api_artifact="${{ env.API_WP_LATEST_ARTIFACT }}" \
                    -f e2e_artifact="${{ env.E2E_WP_LATEST_ARTIFACT }}" \
                    -f env_description="WP Latest" \
                    -f s3_path="test/release/${{ needs.get-tag.outputs.tag }}/wp-latest" \
                    --repo woocommerce/woocommerce-test-reports
