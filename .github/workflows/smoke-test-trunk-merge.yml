name: Run tests on PR merge to trunk
on:
    push:
        branch:
            - 'e2e/on-trunk-merge-0'

concurrency:
    group: trunk-merge-${{ github.sha }}
    cancel-in-progress: true

permissions: {}

jobs:
    e2e:
        name: Runs E2E tests.
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ARTIFACT_NAME: e2e-trunk-commit-${{ github.sha }}-run-${{ github.run_number }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Setup E2E local environment
              uses: ./.github/actions/tests/setup-e2e-local-environment
              env:
                  ENABLE_HPOS: 0
                  WP_ENV_PHP_VERSION: 7.4

            - name: Run E2E tests
              id: e2e-action
              uses: ./.github/actions/tests/run-e2e
              with:
                  report-name: ${{ env.ARTIFACT_NAME }}

            - name: Upload Allure files to bucket
              uses: .github/actions/tests/upload-allure-files-to-bucket
              with:
                  artifact-name: ${{ env.ARTIFACT_NAME }}

            - name: Publish Allure report
              env:
                  GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
              run: |
                  gh workflow run publish-test-reports-trunk-merge.yml \
                  -f run_id=${{ github.run_id }} \
                  -f artifact=${{ env.ARTIFACT_NAME }} \
                  -f sha=${{ github.sha }} \
                  -f test_type="e2e" \
                  --repo woocommerce/woocommerce-test-reports

    api-tests-run:
        name: Runs API tests.
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-report
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Load docker images and start containers.
              working-directory: plugins/woocommerce
              env:
                  ENABLE_HPOS: 0
              run: pnpm env:test --filter=woocommerce

            - name: Run Playwright API tests.
              id: run_playwright_api_tests
              working-directory: plugins/woocommerce
              env:
                  BASE_URL: http://localhost:8086
                  USER_KEY: admin
                  USER_SECRET: password
              run: pnpm exec playwright test --config=tests/api-core-tests/playwright.config.js

            - name: Generate Playwright API Test report.
              id: generate_api_report
              if: |
                  always() &&
                  (
                    steps.run_playwright_api_tests.conclusion != 'cancelled' ||
                    steps.run_playwright_api_tests.conclusion != 'skipped' 
                  )
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}
            - name: Archive Playwright API test report
              if: |
                  always() &&
                  steps.generate_api_report.conclusion == 'success'
              uses: actions/upload-artifact@v3
              with:
                  name: api-test-report---pr-${{ github.event.number }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5

    k6-tests-run:
        name: Runs k6 Performance tests
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Load docker images and start containers.
              working-directory: plugins/woocommerce
              env:
                  ENABLE_HPOS: 0
              run: |
                  pnpm env:dev --filter=woocommerce
                  pnpm env:performance-init --filter=woocommerce

            - name: Install k6
              run: |
                  curl https://github.com/grafana/k6/releases/download/v0.33.0/k6-v0.33.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1

            - name: Run k6 tests
              run: |
                  ./k6 run plugins/woocommerce/tests/performance/tests/gh-action-pr-requests.js
