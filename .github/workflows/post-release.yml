name: Run post release processes
on: 
  release:
    types: [released]

env:
    GIT_COMMITTER_NAME: 'WooCommerce Bot'
    GIT_COMMITTER_EMAIL: 'no-reply@woocommerce.com'
    GIT_AUTHOR_NAME: 'WooCommerce Bot'
    GIT_AUTHOR_EMAIL: 'no-reply@woocommerce.com'

jobs:
  changelog-version-update:
    name: Update changelog and version
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Git fetch trunk branch
        run: git fetch origin trunk

      - name: Copy changelog.txt to vm root
        run: cp changelog.txt ../../changelog.txt

      - name: Switch to trunk branch
        run: git checkout trunk

      - name: Create a new branch based on trunk
        run: git checkout -b prep/post-release-tasks-${{ github.event.release.tag_name }}

      - name: Copy saved changelog.txt to monorepo
        run: cp ../../changelog.txt ./changelog.txt

      - name: Bump readme.txt stable to the released version
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require( 'node:fs' );
            const version = ${{ toJSON( github.event.release.tag_name ) }}

            fs.readFile( './plugins/woocommerce/readme.txt', 'utf-8', function( err, data ) {
              if ( err ) {
                console.error( err );
              }

              const regex = /Stable\stag:(\s\d+\.\d+\.\d+)/g;

              const newReadme = data.replace( regex, `Stable tag: ${version}` );

              fs.writeFile( './plugins/woocommerce/readme.txt', newReadme, err => {
                if ( err ) {
                  console.error( 'Unable to bump the stable version in readme.txt' );
                }
              } )
            } )

      - name: Commit changes
        run: git commit -am "Prep trunk post release ${{ github.event.release.tag_name }}"

      - name: Push branch up
        run: git push origin prep/post-release-tasks-${{ github.event.release.tag_name }}

      - name: Create the PR
        uses: actions/github-script@v6
        with:
          script: |
            const body = "This PR updates the changelog.txt entries and version in Stable tag based on the latest release: ${{ github.event.release.tag_name }}"

            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Update changelog.txt and Stable Version from release ${{ github.event.release.tag_name }}",
              head: "prep/post-release-tasks-${{ github.event.release.tag_name }}",
              base: "trunk",
              body: body
            })

            const prCreated = await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number,
              reviewers: ["${{ github.event.release.author.login }}"]
            })
