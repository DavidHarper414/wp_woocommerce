name: Run unit tests on PR
on:
    pull_request:
        paths-ignore:
            - '**/changelog/**'
defaults:
    run:
        shell: bash
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions: {}

jobs:
    test:
        if: ${{ github.event.pull_request.user.login != 'github-actions[bot]' }}
        name: PHP ${{ matrix.php }} WP ${{ matrix.wp }} ${{ matrix.hpos && 'HPOS' || '' }}
        timeout-minutes: 30
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        continue-on-error: ${{ matrix.wp == 'nightly' }}
        env:
            HPOS: ${{ matrix.hpos }}
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4', '8.0']
                wp: ['latest']
                include:
                    - wp: nightly
                      php: '7.4'
                    - wp: '6.1'
                      php: 7.4
                    - wp: 'latest'
                      php: '7.4'
                      hpos: true
        services:
            database:
                image: mysql:5.6
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        steps:
            - uses: actions/checkout@v3

            - name: Setup PNPM
              uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
              with:
                  version: '8.6.7'
    
            - name: Setup Node
              uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
              with:
                  node-version-file: .nvmrc
                  cache: pnpm
                  registry-url: 'https://registry.npmjs.org'
    
            - name: Setup PHP
              uses: shivammathur/setup-php@8e2ac35f639d3e794c1da1f28999385ab6fdf0fc
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none
                  tools: phpcs, sirbrillig/phpcs-changed:2.11.1
    
            - name: Cache Composer Dependencies
              uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
              with:
                  path: ~/.cache/composer/files
                  key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-
    
            - name: Install Node
              shell: bash
              run: |
                  pnpm -w install turbo
                  pnpm install --ignore-scripts

            - name: Install PHP Dependencies
              shell: bash
              run: |
                  pnpm -r run postinstall
    
            - name: Get branch name
              id: get_branch
              shell: bash
              run: |
                  if [ "${{ github.event_name }}" == "pull_request" ]; then
                    branch_name=$(echo "${{ github.head_ref }}" | tr '/' '-')
                    echo "CURRENT_BRANCH_NAME=$branch_name" >> $GITHUB_OUTPUT
                  else
                    echo "CURRENT_BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
                  fi
    
            - name: Cache Build Output
              uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
              with:
                  path: .turbo
                  key: ${{ runner.os }}-build-output-${{ steps.get_branch.outputs.CURRENT_BRANCH_NAME }}-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-build-output-${{ steps.get_branch.outputs.CURRENT_BRANCH_NAME }}
                      ${{ runner.os }}-build-output
    
            - name: Build
              shell: bash
              run: pnpm -w exec turbo run turbo:build --cache-dir=".turbo" --filter=woocommerce

            - id: parseMatrix
              name: Parse Matrix Variables
              uses: actions/github-script@v6
              with:
                script: |
                    const parseWPVersion = require( './.github/workflows/scripts/parse-wp-version' );
                    parseWPVersion( '${{ matrix.wp }}' ).then( ( version ) => {
                      core.setOutput( 'wpVersion', version );
                    } );

            - name: Prepare Testing Environment
              env:
                WP_ENV_CORE: ${{ steps.parseMatrix.outputs.wpVersion }}
                WP_ENV_PHP_VERSION: ${{ matrix.php }}
              run: pnpm --filter=woocommerce env:test

            - name: Run Tests
              env:
                WP_ENV_CORE: ${{ steps.parseMatrix.outputs.wpVersion }}
                WP_ENV_PHP_VERSION: ${{ matrix.php }}
              run: pnpm --filter=woocommerce test:unit:env
